---
- hosts: nios

  connection: local
  tasks:
    - name: Look up the Network via Network Container EA SifLoc
      set_fact:
        network: "{{ lookup('nios', 'networkcontainer', extattrs={'SifLoc':'Sif'},return_fields=['network','extattrs'],provider=nios_provider) }}"
        provider: "{{nios_provider}}"

    - name:               Set Network to a Variable
      set_fact:
        network_id:           "{{ network.network}}"

    - name: create a the next network
      set_fact:
        networkaddr: "{{ lookup('infoblox.nios_modules.nios_next_network', network_id, cidr=20, provider=nios_provider) }}"
        provider: "{{nios_provider}}"


    - name: create a VPC with default tenancy and a couple of tags
      ec2_vpc_net:
        aws_access_key: "YOURKEY"
        aws_secret_key: "YOURKEY"
        name: Module_dev
        cidr_block: "{{ item }}"
        region: us-east-2
        tags:
          module: ec2_vpc_net
          this: works
        tenancy: default
      loop: "{{ networkaddr }}"
      register: my_vpc

    - name: Print return information from the previous task
      ansible.builtin.debug:
        var: my_vpc

    - name:               Set VPC ID in variable
      set_fact:
        vpc_id:           "{{ my_vpc.results.0.vpc.id }}"

    - name: configure a network ipv4
      infoblox.nios_modules.nios_network:
        network: "{{ item }}"
        comment: AWS VPC
        container: true
        extattrs:
          my_vpc_id: "{{ vpc_id }}"
          Site: Module_dev
        state: present
        provider: "{{nios_provider}}"
      loop: "{{ networkaddr }}"
